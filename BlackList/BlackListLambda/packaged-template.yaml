AWSTemplateFormatVersion: '2010-09-09'
Description: A starter AWS Lambda function. Test lambda function for the scotty1 bot.
Parameters:
  apiToken:
    Default: ''
    Type: String
  userList:
    Default: ''
    Type: String
Resources:
  BlackList:
    LambdaInvokePermission:
      Properties:
        Action: lambda:InvokeFunction
        FunctionName:
          Fn::GetAtt:
          - TableAccess
          - Arn
        Principal: events.amazonaws.com
        SourceArn:
          Fn::Join:
          - ''
          - - 'arn:aws:lex:'
            - Ref: AWS::Region
            - ':'
            - Ref: AWS::AccountId
            - :intent:BlackList:*
      Type: AWS::Lambda::Permission
    Properties:
      CodeUri: s3://dev2-useast1-lambda-deploy/Blacklist/c31218246b1c3f3b09e50d23a5cebb94
      Description: BlackList
      Environment:
        Variables:
          api_token:
            Ref: apiToken
          usersList: ssinnadurai
      FunctionName: BlackList
      Handler: BlackListLambdaHandler.lambda_handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - ExecutionRole
        - Arn
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Serverless::Function
  ExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            - lambda:UpdateFunctionConfiguration
            - lambda:PutFunctionConcurrency
            - lambda:AddPermission
            Effect: Allow
            Resource:
            - '*'
          Version: '2012-10-17'
        PolicyName: AllowIAMPolicyModifications
    Type: AWS::IAM::Role
Transform: AWS::Serverless-2016-10-31
